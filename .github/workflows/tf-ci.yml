name: tf-ci
on:
  pull_request:
  push:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.6
          terraform_wrapper: false

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: gha-appstream

      - name: Pre-commit (fmt/validate/tflint/checkov)
        run: |
          pipx install pre-commit
          pre-commit run --all-files

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false -no-color

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -input=false -no-color -var-file="terraform.tfvars" -out=plan.out

      - uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/plan.out

  apply:
    if: github.ref == 'refs/heads/main'
    needs: [plan]
    runs-on: ubuntu-latest
    environment: production   # use GitHub Environments for manual protection if desired
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
          terraform_wrapper: false

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: gha-appstream

      - uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform

      - name: Terraform Init (same backend)
        working-directory: terraform
        run: terraform init -input=false -no-color

      - name: Terraform Apply (non-interactive)
        working-directory: terraform
        run: terraform apply -input=false -no-color plan.out -dry-run
